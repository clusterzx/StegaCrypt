Imports System.IO
Imports System.Windows.Forms
Imports System.Windows.Forms.Form
Imports Microsoft.VisualBasic
Imports System.Text
Imports System.Runtime
Imports System.Drawing

Namespace MyApp

    Public Class EntryPoint
        Public Shared Sub Main()
            Msgbox("Test West Inzest")
        End Sub
		
		Public Shared Function Encode(BMP As Bitmap, Text As String) As Bitmap

        Dim TxtBytes() As Byte
        Using Txt_MS As New System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(Text))
            Using Compress_MS As New System.IO.MemoryStream
                Using CompressedStream As New System.IO.Compression.DeflateStream(Compress_MS, System.IO.Compression.CompressionLevel.Optimal)
                    Txt_MS.CopyTo(CompressedStream)
                End Using
                TxtBytes = Compress_MS.ToArray
            End Using
        End Using

        Dim Length() As Byte = System.BitConverter.GetBytes(TxtBytes.Length)
        Dim Temp(TxtBytes.Length + 3) As Byte
        System.Array.Copy(TxtBytes, 0, Temp, 4, TxtBytes.Length)
        TxtBytes = Temp
        System.Array.Copy(Length, 0, TxtBytes, 0, 4)

        Dim pixels() As Byte
        Dim handle As System.Runtime.InteropServices.GCHandle
        Dim compatibleBMP As Bitmap

            Dim PaddingLength As Integer = 4 - ((BMP.Width * 3) Mod 4)
            If PaddingLength = 4 Then PaddingLength = 0
            Dim Stride As Integer = BMP.Width * 3 + PaddingLength
            ReDim pixels(BMP.Height * Stride)
            handle = System.Runtime.InteropServices.GCHandle.Alloc(pixels, System.Runtime.InteropServices.GCHandleType.Pinned)
            Dim Scan0 As System.IntPtr = handle.AddrOfPinnedObject()
            compatibleBMP = New Bitmap(BMP.Width, BMP.Height, Stride, Imaging.PixelFormat.Format24bppRgb, Scan0)
            Using g As Graphics = Graphics.FromImage(compatibleBMP)
                g.DrawImage(BMP, 0, 0, BMP.Width, BMP.Height)
            End Using

            Dim BmpPtr As Integer = 0
            Dim BAPtr As Integer = 0
            Dim BA As New System.Collections.BitArray(TxtBytes)

            For y As Integer = 0 To BMP.Height - 1
                For x As Integer = 0 To BMP.Width - 1
                    BmpPtr = x * 3 + y * Stride
                    For z As Integer = 1 To 3
                        pixels(BmpPtr) = (pixels(BmpPtr) And &HFE) Or If(BA(BAPtr), 1, 0)
                        BmpPtr += 1
                        BAPtr += 1
                        If BAPtr = BA.Length Then
                            GoTo Done
                        End If
                    Next
                Next
            Next
Done:

            If BAPtr < BA.Length Then

            End If

            Return compatibleBMP
            handle.Free()
    End Function

    Public Shared Function Decode(BMP As Bitmap) As String

        If BMP.PixelFormat <> Imaging.PixelFormat.Format24bppRgb Then

        End If

        Dim Data As New Imaging.BitmapData
        BMP.LockBits(New Rectangle(0, 0, BMP.Width, BMP.Height), Imaging.ImageLockMode.ReadOnly, Imaging.PixelFormat.Format24bppRgb, Data)
        Dim pixels(BMP.Height * Data.Stride) As Byte
        System.Runtime.InteropServices.Marshal.Copy(Data.Scan0, pixels, 0, pixels.Length)
        Dim Stride As Integer = Data.Stride
        BMP.UnlockBits(Data)

            Dim DecodedBytes As New System.Collections.Generic.List(Of Byte)
            Dim BmpPtr As Integer = 0
            Dim Bit As Byte = 0
            Dim [Byte] As Byte = 0
            Dim BitIndex As Integer = 0
            Dim Length As Integer = 0

            For y As Integer = 0 To BMP.Height - 1
                For x As Integer = 0 To BMP.Width - 1
                    BmpPtr = x * 3 + y * Stride
                    For z As Integer = 1 To 3
                        Bit = (pixels(BmpPtr) And 1) << BitIndex
                        [Byte] = [Byte] Or Bit
                        If BitIndex = 7 Then
                            If Length <> 0 Then
                                If DecodedBytes.Count = Length Then
                                    GoTo Done
                                End If
                            End If
                            DecodedBytes.Add([Byte])
                            If DecodedBytes.Count = 4 And Length = 0 Then
                                Dim LengthByte() As Byte = DecodedBytes.ToArray
                                DecodedBytes.Clear()
                                Length = System.BitConverter.ToInt32(LengthByte, 0)
                            End If
                            [Byte] = 0
                            BitIndex = 0
                        Else
                            BitIndex += 1
                        End If
                        BmpPtr += 1
                    Next
                Next
            Next
Done:

            Dim UTF8Bytes() As Byte
            Using CompressMS As New System.IO.MemoryStream(DecodedBytes.ToArray)
                Using DecompressMS As New System.IO.MemoryStream
                    Using DecompressStream As New System.IO.Compression.DeflateStream(CompressMS, System.IO.Compression.CompressionMode.Decompress)
                        DecompressStream.CopyTo(DecompressMS)
                    End Using
                    UTF8Bytes = DecompressMS.ToArray
                End Using
            End Using

            Return System.Text.Encoding.UTF8.GetString(UTF8Bytes)
    End Function
		
		
    End Class

End Namespace